body {
    font-family: 'Inter', sans-serif;
    background-color: #f0f2f5;
    color: #333;
    margin: 0;
    padding: 2rem;
}

.container {
    max-width: 900px;
    margin: 0 auto;
    background-color: #ffffff;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
}

header {
    text-align: center;
    border-bottom: 1px solid #e0e0e0;
    padding-bottom: 1.5rem;
    margin-bottom: 1.5rem;
}

header h1 {
    margin: 0;
    color: #1a73e8;
}

/* Controls */
.controls {
    text-align: center;
    margin-bottom: 2rem;
}

#fetch-users-btn {
    background-color: #1a73e8;
    color: white;
    border: none;
    padding: 12px 24px;
    font-size: 16px;
    font-weight: 500;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

#fetch-users-btn:hover {
    background-color: #185abc;
    box-shadow: 0 2px 8px rgba(0,0,0,0.15);
}

#user-list-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    /* WORKSHOP DEMO: EXPLAIN CSS
      This is a good property to ask the AI about.
      "What does `align-content: start;` do in a grid layout?"
    */
    align-content: start;
}

.user-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1rem;
    background-color: #fafafa;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.user-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.user-card h3 {
    margin: 0 0 0.5rem 0;
    color: #333;
}

.user-card p {
    margin: 0;
    font-size: 14px;
    color: #666;
}

#modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

#modal-content {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    text-align: center;
}

/* WORKSHOP DEMO: CSS DISPLAY BUG
  The parent container #modal-overlay has a `display: flex;` property.
  That overrides the display property of bellow .hidden class.
  That's why the modal is always visible and user can not interact with the page
*/
.hidden {
    display: none;
}
